<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\..\common.openconsole.props" Condition="'$(OpenConsoleDir)'==''" />

  <Import Project="$(OpenConsoleDir)src\wap-common.build.pre.props" />

  <PropertyGroup Label="Version">
    <!-- These fields are picked up by PackageES -->
    <VersionMajor>0</VersionMajor>
    <VersionMinor>1</VersionMinor>
  </PropertyGroup>

  <PropertyGroup Label="Configuration">
    <TargetPlatformVersion>10.0.17763.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <!--
    These two properties are very important!
    Without them, msbuild will stomp MinVersion and MaxVersionTested in the
    Package.appxmanifest and replace them with whatever our values for
    TargetPlatformMinVersion and TargetPlatformVersion are.
     -->
    <AppxOSMinVersionReplaceManifestVersion>false</AppxOSMinVersionReplaceManifestVersion>
    <AppxOSMaxVersionTestedReplaceManifestVersion>false</AppxOSMaxVersionTestedReplaceManifestVersion>
  </PropertyGroup>

  <PropertyGroup>
    <ProjectGuid>CA5CAD1A-224A-4171-B13A-F16E576FDD12</ProjectGuid>
    <EntryPointProjectUniqueName>..\CascadiaWin32\CascadiaWin32.vcxproj</EntryPointProjectUniqueName>
  </PropertyGroup>

  <PropertyGroup Condition="!Exists('CascadiaPackage_TemporaryKey.pfx')">
    <AppxPackageSigningEnabled>false</AppxPackageSigningEnabled>
    <AppxBundle>Never</AppxBundle>
  </PropertyGroup>
  <PropertyGroup Condition="Exists('CascadiaPackage_TemporaryKey.pfx')">
    <AppxPackageSigningEnabled>true</AppxPackageSigningEnabled>
    <AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
    <PackageCertificateKeyFile>CascadiaPackage_TemporaryKey.pfx</PackageCertificateKeyFile>
  </PropertyGroup>
  <ItemGroup Condition="Exists('CascadiaPackage_TemporaryKey.pfx')">
    <None Include="CascadiaPackage_TemporaryKey.pfx" />
  </ItemGroup>

  <ItemGroup>
    <AppxManifest Include="Package.appxmanifest">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>

  <ItemGroup>
    <Content Include="Images\LockScreenLogo.scale-200.png" />
    <Content Include="Images\Square150x150Logo.scale-200.png" />
    <Content Include="Images\Square44x44Logo.scale-200.png" />
    <Content Include="Images\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Images\StoreLogo.png" />
    <Content Include="Images\Wide310x150Logo.scale-200.png" />
    <PRIResource Include="Resources\en-US\Resources.resw" />
  </ItemGroup>

  <Import Project="$(OpenConsoleDir)src\wap-common.build.post.props" />

  <ItemGroup>
    <ProjectReference Include="..\CascadiaWin32\CascadiaWin32.vcxproj" />
    <ProjectReference Include="..\..\host\exe\Host.EXE.vcxproj" />
  </ItemGroup>

  <!-- Stomp the path to conhost.exe.
    This task will copy OpenConsole.exe to the appx as conhost.exe, and place it
    adjacent to CascadiaWin32.exe.
   -->
  <Target Name="OpenConsoleStompSourceProjectForWapProject" BeforeTargets="_ConvertItems">
    <ItemGroup>
      <!-- Only apply the stomping to OpenConsole -->
      <_TemporaryFilteredWapProjOutput
        Include="@(_FilteredNonWapProjProjectOutput)"
        Condition="'%(_FilteredNonWapProjProjectOutput.Filename)' == 'OpenConsole'" />
      <_FilteredNonWapProjProjectOutput Remove="@(_TemporaryFilteredWapProjOutput)" />
      <_FilteredNonWapProjProjectOutput Include="@(_TemporaryFilteredWapProjOutput)">
        <!-- Override the path to the file-->
        <TargetPath>CascadiaWin32\conhost.exe</TargetPath>
        <!-- Blank SourceProject, which WapProj uses to name subdirectories. -->
        <SourceProject></SourceProject>
      </_FilteredNonWapProjProjectOutput>
    </ItemGroup>
  </Target>

</Project>
