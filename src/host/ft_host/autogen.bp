namespace Onecore.Windows.Core.Console.Open.Src.Host.Ft_host {

    export declare const qualifier: WdgBuild.StandardPlatformsQualifier;

    const dotDot = d`${srcRoot}\onecore\windows\core\console\open\src\host`;

    const o = d`${objRoot}\onecore\windows\core\console\open\src\host\ft_host\${buildAlt}`;

    const prePass = LegacyBuild.build({
        template: template_NMake,
        classification: "test",
        targetPass: "prePass",
        
        consumes: [
            f`autogen.bp`,
            f`autogen.bp`,
            f`host.featuretests.vcxproj`,
            f`product.pbxproj`,
            f`${dotDot}\sources.test.inc`,
        ],
    });

    export const pass1 = LegacyBuild.build({
        template: template_NMake,
        classification: "test",
        targetPass: "pass1",
        
        consumes: [
            f`api_aliastests.cpp`,
            f`api_aliastestshelpers.hpp`,
            f`api_buffertests.cpp`,
            f`api_cursortests.cpp`,
            f`api_dimensionstests.cpp`,
            f`api_filetests.cpp`,
            f`api_fonttests.cpp`,
            f`api_inputtests.cpp`,
            f`api_modetests.cpp`,
            f`api_policytests.cpp`,
            f`api_rgbcolortests.cpp`,
            f`api_titletests.cpp`,
            f`autogen.bp`,
            f`autogen.bp`,
            f`cjk_dbcstests.cpp`,
            f`common.cpp`,
            f`common.hpp`,
            f`host.featuretests.vcxproj`,
            f`inittests.cpp`,
            f`message_keypresstests.cpp`,
            f`onecoredelay.cpp`,
            f`onecoredelay.hpp`,
            f`precomp.cpp`,
            f`precomp.h`,
            f`product.pbxproj`,
            f`testmd.definition`,
            f`${dotDot}\precomp.h`,
            f`${dotDot}\sources.test.inc`,
            f`${objRoot}\${buildAlt}\onecorefeaturestaging.inc`,
            f`${srcRoot}\build\scripts\generatetestlist.cmd`,
            f`${srcRoot}\onecore\windows\core\console\open\src\inc\consoletaeftemplates.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\interactivity\inc\isystemconfigurationprovider.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\interactivity\onecore\systemconfigurationprovider.hpp`,

            prePass,

            MsWinCrts.Public.Internal.Sdk.Inc.Ucrt.header,
            MsWinCrts.Public.Internal.Sdk.Inc.Ucrt.Stl120.header,
            MsWinCrts.Public.Internal.Sdk.Inc.Ucrt.Stl120.Thr.header,
            MsWinCrts.Public.Sdk.Inc.Ucrt.header,
            MsWinCrts.Public.Sdk.Inc.Ucrt.Sys.header,
            MsWinOnecoreBase.Public.Shared.Inc.header,
            MsWinOnecoreCom.Public.Shared.Inc.header,
            MsWinOnecoreNet.Public.Sdk.Inc.header,
            MsWinOnecoreSdkTools.Public.Internal.Onecoresdktools.Inc.header,
            MsWinOnecoreSdkTools.Public.Internal.Sdk.Inc.header,
            MsWinOnecoreSdkTools.Public.Shared.Inc.header,
            MsWinOnecoreShell.Public.Internal.Sdk.Inc.Wil.header,
            MsWinOnecoreShell.Public.Sdk.Inc.idl,
            MsWinOnecore_ApiSet.Private.Internal.Mincore.Priv_sdk.Inc.header,
            MsWinOnecore_ApiSet.Public.Sdk.Inc.Mincore.header,
            MsWinOnecore_MinKernel.Private.Internal.Minwin.Priv_sdk.Inc.idl,
            MsWinOnecore_MinKernel.Public.Internal.Base.Inc.header,
            MsWinOnecore_MinKernel.Public.Sdk.Inc.idl,
            MsWinOnecore_MinKernel.Public.Sdk.Inc.Minwin.header,
            MsWinOnecore_MinKernel.Public.Shared.Inc.header,
            MsWinOnecore_MinKernel.Public.Shared.Inc.Minwin.header,
            MsWinOnecore_Taef.Public.Internal.Sdktools.Inc.Wextest.Cue.header,
            Public.Sdk.Inc.header,
            Public.Sdk.Inc.idl,
            Public.Shared.Inc.header,
        ],
        
        produces: [
            p`${binRoot}\blg\msbuildprops\nmakeprops\onecore-windows-core-console-open-src-host-ft_host-nmake_to_mbs_pass1.props.br`,
            p`${binRoot}\msbuildprops\nmakeprops\onecore-windows-core-console-open-src-host-ft_host-nmake_to_mbs_pass1.props`,
            p`${o}\api_aliastests.obj`,
            p`${o}\api_buffertests.obj`,
            p`${o}\api_cursortests.obj`,
            p`${o}\api_dimensionstests.obj`,
            p`${o}\api_filetests.obj`,
            p`${o}\api_fonttests.obj`,
            p`${o}\api_inputtests.obj`,
            p`${o}\api_modetests.obj`,
            p`${o}\api_policytests.obj`,
            p`${o}\api_rgbcolortests.obj`,
            p`${o}\api_titletests.obj`,
            p`${o}\cjk_dbcstests.obj`,
            p`${o}\common.obj`,
            p`${o}\inittests.obj`,
            p`${o}\message_keypresstests.obj`,
            p`${o}\microsoft.console.host.featuretests.exp`,
            p`${o}\microsoft.console.host.featuretests.lib`,
            p`${o}\microsoft.console.host.featuretests.testmd_metadata`,
            p`${o}\nmake_to_mbs_pass1.props`,
            p`${o}\onecoredelay.obj`,
            p`${o}\pch_hdr.src`,
            p`${o}\precomp.obj`,
            p`${o}\precomp.pch`,
            p`${o}\targetlibs.txt`,
        ],
    });

    const pass2 = LegacyBuild.build({
        template: template_NMake,
        classification: "test",
        targetPass: "pass2",
        
        consumes: [
            f`api_aliastests.cpp`,
            f`api_buffertests.cpp`,
            f`api_cursortests.cpp`,
            f`api_dimensionstests.cpp`,
            f`api_filetests.cpp`,
            f`api_fonttests.cpp`,
            f`api_inputtests.cpp`,
            f`api_modetests.cpp`,
            f`api_policytests.cpp`,
            f`api_rgbcolortests.cpp`,
            f`api_titletests.cpp`,
            f`autogen.bp`,
            f`autogen.bp`,
            f`cjk_dbcstests.cpp`,
            f`common.cpp`,
            f`defaultresource.rc`,
            f`host.featuretests.vcxproj`,
            f`inittests.cpp`,
            f`message_keypresstests.cpp`,
            f`onecoredelay.cpp`,
            f`precomp.cpp`,
            f`product.pbxproj`,
            f`testmd.definition`,
            f`${dotDot}\precomp.h`,
            f`${dotDot}\sources.test.inc`,
            f`${objRoot}\${buildAlt}\onecorefeaturestaging.inc`,
            f`${srcRoot}\build\scripts\expdelayload.cmd`,
            f`${srcRoot}\build\scripts\fixtsversionstringappend.cmd`,
            f`${srcRoot}\build\scripts\testmdgen.cmd`,
            MsWinCrts.Public.Internal.Sdk.Lib.Ucrt.library,
            isBuildDebug && isBuildCommonArchitecture ? MsWinCrts.Public.Internal.Sdk.Lib.library : undefined,
            isBuildArm32 || isBuildArm64 ? MsWinCrts.Public.Sdk.Lib.library : undefined,
            MsWinOnecoreAvcore.Private.Internal.Moderncore.Priv_sdk.Lib.V1_7.library,
            MsWinOnecoreBase.Public.Shared.Inc.header,
            MsWinOnecoreMerged.Private.Internal.Minwin.Priv_sdk.Lib.library,
            MsWinOnecoreMerged.Private.Internal.Onecore.Priv_sdk.Lib.V1_8.library,
            MsWinOnecoreMerged.Public.Internal.Sdk.Lib.library,
            MsWinOnecoreShell.Public.Sdk.Inc.idl,
            MsWinOnecoreUapMerged.Public.Internal.Sdk.Lib.library,
            MsWinOnecoreUapShell.Public.Sdk.Lib.library,
            MsWinOnecoreUapWindows.Public.Internal.Onecoreuapwindows.Lib.library,
            pass1,
            prePass,
            Onecore.Windows.Core.Console.Open.Src.Host.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Interactivity.Base.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Interactivity.Onecore.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Interactivity.Win32.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Propslib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Renderer.Base.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Renderer.Gdi.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Renderer.Vt.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Renderer.Vt.Ut_lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Renderer.Wddmcon.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Server.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Terminal.Adapter.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Terminal.Parser.Lib.pass1,
            Onecore.Windows.Core.Console.Open.Src.Tsf.pass1,
            Onecore.Windows.Core.Console.Open.Src.Types.Lib.pass1,
            Onecore.Windows.Moderncore.Apiset.Libs.Uiacore.Current.internalModerncorePriv_sdkLib17_library,
            Public.Sdk.Inc.idl,
            MsWinOnecore_ApiSet.Private.Internal.Mincore.Priv_sdk.Lib.V1_8.library,
            MsWinOnecore_MinCore.Private.Internal.Mincore.Priv_sdk.Lib.library,
            MsWinOnecore_MinKernel.Private.Internal.Minwin.Priv_sdk.Lib.V1_9.library,
            MsWinOnecore_MinKernel.Public.Internal.Sdk.Lib.library,
            MsWinOnecore_MinKernel.Public.Sdk.Inc.Minwin.header,
            MsWinOnecore_MinKernel.Public.Sdk.Inc.idl,
            MsWinOnecore_MinKernel.Public.Sdk.Lib.Minwin.V1_9.library,
            MsWinOnecore_MinKernel.Public.Sdk.Lib.library,
            MsWinOnecore_MinKernel.Public.Shared.Inc.header,
            MsWinOnecore_Taef.Public.Internal.Sdktools.Lib.Wextest.Cue.tlb,
        ]
        .filter(e => e !== undefined),
        
        produces: [
            p`${binRoot}\blg\msbuildprops\nmakeprops\onecore-windows-core-console-open-src-host-ft_host-nmake_to_mbs_pass2.props.br`,
            p`${binRoot}\blg\prebuilt\test\${buildArch}\${buildType}\microsoft.console.host.featuretests.testmd.br`,
            p`${binRoot}\blg\prebuilt\windows\microsoft.console.host.featuretests.testmd.br`,
            p`${binRoot}\blg\unittests\microsoft.console.host.featuretests.dll.br`,
            p`${binRoot}\msbuildprops\nmakeprops\onecore-windows-core-console-open-src-host-ft_host-nmake_to_mbs_pass2.props`,
            p`${binRoot}\prebuilt\test\${buildArch}\${buildType}\microsoft.console.host.featuretests.testmd`,
            p`${binRoot}\prebuilt\windows\microsoft.console.host.featuretests.testmd`,
            p`${binRoot}\symbols.pri\unittests\dll\microsoft.console.host.featuretests.pdb`,
            p`${binRoot}\unittests\microsoft.console.host.featuretests.dll`,
            p`${o}\defaultresource.res`,
            p`${o}\delayload.txt`,
            p`${o}\delayload_expansion.inc`,
            p`${o}\microsoft-console-host-featuretests.spkg.meta.xml`,
            p`${o}\microsoft.console.host.featuretests.dll`,
            p`${o}\microsoft.console.host.featuretests.macros`,
            p`${o}\microsoft.console.host.featuretests.pdb`,
            p`${o}\microsoft.console.host.featuretests.testmd`,
            p`${o}\microsoft.console.host.featuretests.wm.xml`,
            p`${o}\nmake_to_mbs_pass2.props`,
        ],
    });

    const pass3 = LegacyBuild.build({
        template: template_NMake,
        classification: "test",
        targetPass: "pass3",
        tags: [
            "Packages",
        ],
        
        consumes: [
            f`autogen.bp`,
            f`autogen.bp`,
            f`host.featuretests.vcxproj`,
            f`${dotDot}\sources.test.inc`,
            pass1,
            pass2,
            prePass,
            (isBuildRelease && isBuildArm32 && MsWinBuild.isOfficialBuild) || (isBuildRelease && isBuildArm64 && MsWinBuild.isOfficialBuild) || (isBuildRelease && isBuildX64 && MsWinBuild.isOfficialBuild) || (isBuildRelease && isBuildX86 && MsWinBuild.isOfficialBuild) ? MsWinOnecore_Pkg.BinPublic.Imagingtools.content : undefined,
            ...addIf(
                isBuildRelease,
                () => [
                    f`product.pbxproj`,
                    f`${srcRoot}\build\scripts\signer.cmd`,
                    f`${srcRoot}\onecore\windows\project.props`,
                    f`${srcRoot}\public\sdk\inc\ntverp.h`,
                ]
            ),
        ]
        .filter(e => e !== undefined),
        
        produces: [
            ...addIf(
                isBuildRelease,
                () => [
                    p`${binRoot}\prebuilt\test\${buildArch}\${buildType}\microsoft-console-host-featuretests.cab`,
                    p`${binRoot}\prebuilt\test\${buildArch}\${buildType}\microsoft-console-host-featuretests.man.dsm.xml`,
                ]
            ),
        ],
    });

    @@public
    export const bin_BlgMsbuildpropsNmakeprops_content = WdgBuild.SdkCombine.evaluate({
        outputDirectory: d`${binRoot}\blg\msbuildprops\nmakeprops`,
        sources: [
            pass1.directories.get(p`${binRoot}\blg\msbuildprops\nmakeprops`),
            pass2.directories.get(p`${binRoot}\blg\msbuildprops\nmakeprops`),
        ],
    });

    export const bin_BlgPrebuiltTest_content = pass2.directories.get(p`${binRoot}\blg\prebuilt\test\${buildArch}\${buildType}`);

    export const bin_BlgPrebuiltWindows_content = pass2.directories.get(p`${binRoot}\blg\prebuilt\windows`);

    export const bin_BlgUnittests_content = pass2.directories.get(p`${binRoot}\blg\unittests`);

    @@public
    export const bin_MsbuildpropsNmakeprops_content = WdgBuild.SdkCombine.evaluate({
        outputDirectory: d`${binRoot}\msbuildprops\nmakeprops`,
        sources: [
            pass1.directories.get(p`${binRoot}\msbuildprops\nmakeprops`),
            pass2.directories.get(p`${binRoot}\msbuildprops\nmakeprops`),
        ],
    });

    export const bin_PrebuiltWindows_content = pass2.directories.get(p`${binRoot}\prebuilt\windows`);

    export const bin_SymbolspriUnittestsDll_content = pass2.directories.get(p`${binRoot}\symbols.pri\unittests\dll`);

    export const bin_Unittests_content = pass2.directories.get(p`${binRoot}\unittests`);

    @@public
    export const bin_PrebuiltTest_content = WdgBuild.SdkCombine.evaluate({
        outputDirectory: d`${binRoot}\prebuilt\test\${buildArch}\${buildType}`,
        sources: [
            pass2.directories.get(p`${binRoot}\prebuilt\test\${buildArch}\${buildType}`),
            isBuildCommonArchitecture && isBuildRelease ? pass3.directories.get(p`${binRoot}\prebuilt\test\${buildArch}\${buildType}`) : undefined,
        ]
        .filter(e => e !== undefined),
    });
}