namespace Onecore.Windows.Core.Console.Open.Src.Renderer.Wddmcon.Lib {

    export declare const qualifier: {
        platform: "arm32" | "arm64" | "x64" | "x86",
        configuration: "debug" | "release",
        codeAnalysisMode: "simpleAnalysis" | "disabled",
    };

    const dotDot = d`${srcRoot}\onecore\windows\core\console\open\src\renderer\wddmcon`;

    const o = d`${objRoot}\onecore\windows\core\console\open\src\renderer\wddmcon\lib\${buildAlt}`;

    const prePass = LegacySdk.build({
        template: template_NMake,
        classification: "product",
        targetPass: "prePass",
        
        consumes: [
            f`autogen.bp`,
        ],
    });

    // DEF: Onecore.Windows.Core.Console.Open.Src.Renderer.Wddmcon.Lib.pass1

    export const pass1 = LegacySdk.build({
        template: template_NMake,
        classification: "product",
        targetPass: "pass1",
        
        consumes: [
            f`autogen.bp`,
            f`${dotDot}\precomp.cpp`,
            f`${dotDot}\precomp.h`,
            f`${dotDot}\wddmconrenderer.cpp`,
            f`${dotDot}\wddmconrenderer.hpp`,
            f`${objRoot}\${buildAlt}\onecorefeaturestaging.inc`,
            f`${srcRoot}\onecore\windows\core\console\open\src\renderer\inc\fontinfo.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\renderer\inc\fontinfobase.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\renderer\inc\fontinfodesired.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\renderer\inc\ifontdefaultlist.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\renderer\inc\irenderengine.hpp`,
            f`${srcRoot}\onecore\windows\core\console\open\src\renderer\inc\irenderer.hpp`,

            prePass,

            $.Public.Sdk.Inc.header,
            $.Public.Sdk.Inc.idl,
            $.Public.Shared.Inc.header,
            MsWinCrts.Public.Internal.Sdk.Inc.Ucrt.header,
            MsWinCrts.Public.Internal.Sdk.Inc.Ucrt.Stl120.header,
            MsWinCrts.Public.Sdk.Inc.Ucrt.header,
            MsWinCrts.Public.Sdk.Inc.Ucrt.Sys.header,
            MsWinOnecoreBase.Public.Shared.Inc.header,
            MsWinOnecoreNet.Public.Sdk.Inc.header,
            MsWinOnecoreSdkTools.Public.Internal.Sdk.Inc.header,
            MsWinOnecoreSdkTools.Public.Shared.Inc.header,
            MsWinOnecoreShell.Public.Internal.Sdk.Inc.Wil.header,
            MsWinOnecoreShell.Public.Sdk.Inc.idl,
            MsWinOnecore_ApiSet.Private.Internal.Mincore.Priv_sdk.Inc.header,
            MsWinOnecore_ApiSet.Public.Sdk.Inc.Mincore.header,
            MsWinOnecore_MinKernel.Private.Internal.Minwin.Priv_sdk.Inc.header,
            MsWinOnecore_MinKernel.Private.Internal.Minwin.Priv_sdk.Inc.idl,
            MsWinOnecore_MinKernel.Public.Ddk.Inc.header,
            MsWinOnecore_MinKernel.Public.Internal.Base.Inc.header,
            MsWinOnecore_MinKernel.Public.Internal.Sdk.Inc.header,
            MsWinOnecore_MinKernel.Public.Internal.Sdk.Inc.Minwin.header,
            MsWinOnecore_MinKernel.Public.Sdk.Inc.idl,
            MsWinOnecore_MinKernel.Public.Sdk.Inc.Minwin.header,
            MsWinOnecore_MinKernel.Public.Shared.Inc.header,
            MsWinOnecore_MinKernel.Public.Shared.Inc.Minwin.header,
        ],
        
        produces: [
            p`${o}\conrenderwddmcon.lib`,
            p`${o}\pch_hdr.src`,
            p`${o}\precomp.obj`,
            p`${o}\precomp.pch`,
            p`${o}\wddmconrenderer.obj`,
        ],
    });
}