// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

namespace VtStateMachine
{
     enum EraseType
     {
         ToEnd = 0,
         FromBeginning = 1,
         All = 2,
         Scrollback = 3
     };

     enum GraphicsOptions
     {
         Off = 0,
         BoldBright = 1,
         RGBColor = 2,
         // 2 is also Faint, decreased intensity (ISO 6429).
         Underline = 4,
         Xterm256Index = 5,
         // 5 is also Blink (appears as Bold).
         // the 2 and 5 entries here are only for the extended graphics options
         // as we do not currently support those features individually
         Negative = 7,
         UnBold = 22,
         NoUnderline = 24,
         Positive = 27,
         ForegroundBlack = 30,
         ForegroundRed = 31,
         ForegroundGreen = 32,
         ForegroundYellow = 33,
         ForegroundBlue = 34,
         ForegroundMagenta = 35,
         ForegroundCyan = 36,
         ForegroundWhite = 37,
         ForegroundExtended = 38,
         ForegroundDefault = 39,
         BackgroundBlack = 40,
         BackgroundRed = 41,
         BackgroundGreen = 42,
         BackgroundYellow = 43,
         BackgroundBlue = 44,
         BackgroundMagenta = 45,
         BackgroundCyan = 46,
         BackgroundWhite = 47,
         BackgroundExtended = 48,
         BackgroundDefault = 49,
         BrightForegroundBlack = 90,
         BrightForegroundRed = 91,
         BrightForegroundGreen = 92,
         BrightForegroundYellow = 93,
         BrightForegroundBlue = 94,
         BrightForegroundMagenta = 95,
         BrightForegroundCyan = 96,
         BrightForegroundWhite = 97,
         BrightBackgroundBlack = 100,
         BrightBackgroundRed = 101,
         BrightBackgroundGreen = 102,
         BrightBackgroundYellow = 103,
         BrightBackgroundBlue = 104,
         BrightBackgroundMagenta = 105,
         BrightBackgroundCyan = 106,
         BrightBackgroundWhite = 107
     };

     enum PrivateModeParams
     {
         DECCKM_CursorKeysMode = 1,
         DECCOLM_SetNumberOfColumns = 3,
         ATT610_StartCursorBlink = 12,
         DECTCEM_TextCursorEnableMode = 25,
         VT200_MOUSE_MODE = 1000,
         BUTTTON_EVENT_MOUSE_MODE = 1002,
         ANY_EVENT_MOUSE_MODE = 1003,
         UTF8_EXTENDED_MODE = 1005,
         SGR_EXTENDED_MODE = 1006,
         ALTERNATE_SCROLL = 1007,
         ASB_AlternateScreenBuffer = 1049
     };

    enum CursorStyle
    {
        BlinkingBlock = 0,
        BlinkingBlockDefault = 1,
        SteadyBlock = 2,
        BlinkingUnderline = 3,
        SteadyUnderline = 4,
        BlinkingBar = 5,
        SteadyBar = 6
    };

    enum AnsiStatusType
    {
        CursorPositionReport = 6,
    };

    enum CharacterSet
    {
        DEC_LineDrawing = L'0',
        USASCII = L'B'
    };

    enum TabClearType
    {
        ClearCurrentColumn = 0,
        ClearAllColumns = 3
    };

    interface ITerminalDispatch
    {
        Boolean ExecuteChar(Char c);
        Boolean PrintString(String str);

        Boolean CursorUp(UInt32 distance);
        Boolean CursorDown(UInt32 distance);
        Boolean CursorForward(UInt32 distance);
        Boolean CursorBackward(UInt32 distance);

        Boolean CursorNextLine(UInt32 distance);
        Boolean CursorPrevLine(UInt32 distance);

        Boolean CursorHorizontalPositionAbsolute(UInt32 column);
        Boolean VerticalLinePositionAbsolute(UInt32 row);

        Boolean CursorPosition(UInt32 row, UInt32 col);

        Boolean CursorSavePosition();
        Boolean CursorRestorePosition();

        Boolean CursorVisibility(Boolean isVisible);

        Boolean InsertCharacter(UInt32 count);
        Boolean DeleteCharacter(UInt32 count);
        Boolean ScrollUp(UInt32 distance);
        Boolean ScrollDown(UInt32 distance);
        Boolean InsertLine(UInt32 lines);
        Boolean DeleteLine(UInt32 lines);
        Boolean SetColumns(UInt32 columns);
        Boolean SetCursorKeysMode(Boolean applicationMode);
        Boolean SetKeypadMode(Boolean applicationMode);
        Boolean EnableCursorBlinking(Boolean isBlinking);
        Boolean SetTopBottomScrollingMargins(UInt32 top, UInt32 bottom);
        Boolean ReverseLineFeed();
        Boolean SetWindowTitle(String title);
        Boolean UseAlternateScreenBuffer();
        Boolean UseMainScreenBuffer();

        Boolean HorizontalTabSet();
        Boolean ForwardTab(UInt32 numTabs);
        Boolean BackwardsTab(UInt32 numTabs);
        Boolean TabClear(TabClearType clearType);
        Boolean EnableVT200MouseMode(Boolean enabled);
        Boolean EnableUTF8ExtendedMouseMode(Boolean enabled);
        Boolean EnableSGRExtendedMouseMode(Boolean enabled);
        Boolean EnableButtonEventMouseMode(Boolean enabled);
        Boolean EnableAnyEventMouseMode(Boolean enabled);
        Boolean EnableAlternateScroll(Boolean enabled);
        Boolean SetColorTableEntry(UInt32 index, UInt32 colorref);

        Boolean EraseInDisplay(EraseType eraseType);
        Boolean EraseInLine(EraseType eraseType);

        Boolean EraseCharacters(UInt32 count);

        Boolean SetGraphicsRendition(GraphicsOptions[] opts);
        Boolean SetPrivateModes(PrivateModeParams[] params);
        Boolean ResetPrivateModes(PrivateModeParams[] params);

        Boolean DeviceStatusReport(AnsiStatusType statusType);
        Boolean DeviceAttributes();
        Boolean DesignateCharset(CharacterSet charset);
        Boolean SoftReset();
        Boolean HardReset();
        Boolean SetCursorStyle(CursorStyle style);
        Boolean SetCursorColor(UInt32 colorref);
        Boolean RefreshWindow();
        Boolean ResizeWindow(UInt32 rows, UInt32 cols);
    };

    [default_interface]
    runtimeclass Parser
    {
        Parser(ITerminalDispatch dispatch);
        Boolean ProcessString(String sequence);
    }

}
